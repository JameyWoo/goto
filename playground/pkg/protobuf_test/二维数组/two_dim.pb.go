// Code generated by protoc-gen-go. DO NOT EDIT.
// source: two_dim.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// this is a comment
type Student struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Male                 bool     `protobuf:"varint,2,opt,name=male,proto3" json:"male,omitempty"`
	S                    []*Score `protobuf:"bytes,3,rep,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Student) Reset()         { *m = Student{} }
func (m *Student) String() string { return proto.CompactTextString(m) }
func (*Student) ProtoMessage()    {}
func (*Student) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ff157faf53ec9f, []int{0}
}

func (m *Student) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Student.Unmarshal(m, b)
}
func (m *Student) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Student.Marshal(b, m, deterministic)
}
func (m *Student) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Student.Merge(m, src)
}
func (m *Student) XXX_Size() int {
	return xxx_messageInfo_Student.Size(m)
}
func (m *Student) XXX_DiscardUnknown() {
	xxx_messageInfo_Student.DiscardUnknown(m)
}

var xxx_messageInfo_Student proto.InternalMessageInfo

func (m *Student) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Student) GetMale() bool {
	if m != nil {
		return m.Male
	}
	return false
}

func (m *Student) GetS() []*Score {
	if m != nil {
		return m.S
	}
	return nil
}

//分数
type Score struct {
	Score                []int32  `protobuf:"varint,3,rep,packed,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Score) Reset()         { *m = Score{} }
func (m *Score) String() string { return proto.CompactTextString(m) }
func (*Score) ProtoMessage()    {}
func (*Score) Descriptor() ([]byte, []int) {
	return fileDescriptor_55ff157faf53ec9f, []int{1}
}

func (m *Score) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Score.Unmarshal(m, b)
}
func (m *Score) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Score.Marshal(b, m, deterministic)
}
func (m *Score) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Score.Merge(m, src)
}
func (m *Score) XXX_Size() int {
	return xxx_messageInfo_Score.Size(m)
}
func (m *Score) XXX_DiscardUnknown() {
	xxx_messageInfo_Score.DiscardUnknown(m)
}

var xxx_messageInfo_Score proto.InternalMessageInfo

func (m *Score) GetScore() []int32 {
	if m != nil {
		return m.Score
	}
	return nil
}

func init() {
	proto.RegisterType((*Student)(nil), "main.Student")
	proto.RegisterType((*Score)(nil), "main.Score")
}

func init() {
	proto.RegisterFile("two_dim.proto", fileDescriptor_55ff157faf53ec9f)
}

var fileDescriptor_55ff157faf53ec9f = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x29, 0xcf, 0x8f,
	0x4f, 0xc9, 0xcc, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x53,
	0xf2, 0xe1, 0x62, 0x0f, 0x2e, 0x29, 0x4d, 0x49, 0xcd, 0x2b, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b,
	0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x41, 0x62, 0xb9, 0x89, 0x39,
	0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x1c, 0x41, 0x60, 0xb6, 0x90, 0x24, 0x17, 0x63, 0xb1, 0x04,
	0xb3, 0x02, 0xb3, 0x06, 0xb7, 0x11, 0xb7, 0x1e, 0xc8, 0x10, 0xbd, 0xe0, 0xe4, 0xfc, 0xa2, 0xd4,
	0x20, 0xc6, 0x62, 0x25, 0x59, 0x2e, 0x56, 0x30, 0x5b, 0x48, 0x84, 0x8b, 0xb5, 0x18, 0xc4, 0x00,
	0xab, 0x63, 0x0d, 0x82, 0x70, 0x92, 0xd8, 0xc0, 0x36, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xea, 0xdc, 0xc2, 0x95, 0x8a, 0x00, 0x00, 0x00,
}
